<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-github搭建博客</title>
      <link href="/2019/01/21/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/01/21/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Github-搭建博客"><a href="#Hexo-Github-搭建博客" class="headerlink" title="Hexo+Github 搭建博客"></a>Hexo+Github 搭建博客</h1><p>准备工作：<br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js官网</a>环境<br><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a><br><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>工具<br><a href="https://github.com/" target="_blank" rel="noopener">Github</a>账号<br><a href="https://coding.net/help/doc/project/markdown.html" target="_blank" rel="noopener">Markdown语法简介</a></p><h3 id="Node-js-是什么？"><a href="#Node-js-是什么？" class="headerlink" title="Node.js 是什么？"></a><strong>Node.js 是什么？</strong></h3><p><center><br><img src="http://plo5fw862.bkt.clouddn.com/15480838376941.jpg" alt="Node.js"><br></center><br>&#160; &#160; &#160; &#160;简单的说 Node.js 就是运行在服务端的 JavaScript。是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。Node公开宣称的目标是 “旨在提供一种简单的构建可伸缩网络程序的方法”。<br>&#160; &#160; &#160; &#160;如果你是一个前端程序员，你不懂得像PHP、Python或Ruby等动态编程语言，然后你想创建自己的服务，那么Node.js是一个非常好的选择。</p><h3 id="什么是-NVM"><a href="#什么是-NVM" class="headerlink" title="什么是 NVM"></a><strong>什么是 NVM</strong></h3><p><img src="http://plo5fw862.bkt.clouddn.com/15480858575101.jpg" alt="NVM"><br>&#160; &#160; &#160; &#160;NVM，即Node Version Manager 是一个开源的Node.js版本管理Bash工具，可方便的在Bash环境下下载、更新、管理多个版本并存的Node.js，并选择性地使用其中一个</p><h3 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="Hexo 是什么？"></a><strong>Hexo 是什么？</strong></h3><p><center><br><img src="http://plo5fw862.bkt.clouddn.com/15480841345013.jpg" alt="Hexo"><br></center><br>&#160; &#160; &#160; &#160;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h3 id="Git-与-Github"><a href="#Git-与-Github" class="headerlink" title="Git 与 Github"></a><strong>Git 与 Github</strong></h3><p><center><br><img src="http://plo5fw862.bkt.clouddn.com/15480846549534.jpg" alt="GitHub"><br></center><br>&#160; &#160; &#160; &#160;Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1]  Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>&#160; &#160; &#160; &#160;而GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。GitHub还是一个开源协作社区，通过GitHub，既可以让别人参与你的开源项目，也可以参与别人的开源项目。<br>&#160; &#160; &#160; &#160;GitHub于2008年4月10日正式上线，除了git代码仓库托管及基本的 Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。目前，其注册用户已经超过350万，托管版本数量也是非常之多，其中不乏知名开源项目 Ruby on Rails、jQuery、python 等。</p><hr><h3 id="一-环境配置"><a href="#一-环境配置" class="headerlink" title="一.环境配置"></a><strong>一.环境配置</strong></h3><p><strong>安装Node.js环境与Git 工具</strong><br>安装 Node.js的最好方法是使用<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a>,在终端中粘贴安装最新版本 nvm 的代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span><br></pre></td></tr></table></figure></p><p>然后使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm -v</span><br></pre></td></tr></table></figure></p><p>测试是否安装成功</p><p><strong>安装 Node.js</strong><br>如果 nvm 安装成功可使用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install node</span><br></pre></td></tr></table></figure><p>也可以使用下面的命令格式安装官网最新版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install node.js版本号</span><br></pre></td></tr></table></figure></p><p>macOS如果安装了 xcode 会默认安装 Git 命令行工具，或者安装<code>Xcode command line tools</code><br>如果都没有安装直接去<a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>官网下载对应系统安装包安装即可  </p><p><strong>安装 Hexo</strong><br>使用npm命令安装 Hexo 其中<code>-g</code>表示全局安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><p>为了便于将博客发布到 GitHub 上同时要安装<code>hexo-deployer-git</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p><strong>准备 Github 环境</strong><br>这部分需要准备 Github 仓库和本机 ssh 公钥<br>首先在 Github 中新建一个仓库，在<code>Repository name</code>处填写:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourGithubAccount.github.io</span><br></pre></td></tr></table></figure></p><p><img src="http://plo5fw862.bkt.clouddn.com/15480853345524.jpg" alt=""></p><p>其中<code>yourGithubAccount</code>就是你的用户名<br>然后生成自己的 ssh 公钥<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “your_Email@example.com” </span><br><span class="line"># 按照提供的 Email 生成 ssh公钥</span><br><span class="line">$ cat ~/.ssh/id_rsa.pub    </span><br><span class="line"># 打开生成的公钥</span><br></pre></td></tr></table></figure></p><p>将打开的公钥内容添加到<code>Github----Account Settings----SSH and GPG keys</code>中<br><img src="http://plo5fw862.bkt.clouddn.com/15480854601565.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line"># 测试是否配置成功</span><br></pre></td></tr></table></figure><p><img src="http://plo5fw862.bkt.clouddn.com/15480859836144.jpg" alt="成功配置"></p><p><strong>完善用户信息</strong><br>Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;username&quot;----Github用户名</span><br><span class="line">$ git config --global user.email &quot;your_email@example.com&quot;----填写自己的邮箱</span><br></pre></td></tr></table></figure></p><hr><h3 id="二-Hexo-初始化配置"><a href="#二-Hexo-初始化配置" class="headerlink" title="二.Hexo 初始化配置"></a><strong>二.Hexo 初始化配置</strong></h3><p><strong>创建 Hexo 文件夹</strong><br>根据喜好自己建立文件夹用于 Hexo 的初始化与部署，使用<code>cd</code>进入文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line"># 初始化 hexo 下载必要文件</span><br><span class="line">$ npm install</span><br><span class="line"># 安装依赖</span><br></pre></td></tr></table></figure></p><p>本地查看效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line"># ---hexo generate 渲染静态页面</span><br><span class="line">$ hexo s</span><br><span class="line"># ---hexo server 启动本地服务器</span><br></pre></td></tr></table></figure></p><p><img src="http://plo5fw862.bkt.clouddn.com/15480860528429.jpg" alt="启动本地预览"><br>根据提示在浏览器中打开<code>localhost:4000</code>即可预览本地效果，<code>Ctrl+C</code>停止预览<br><img src="http://plo5fw862.bkt.clouddn.com/15480851767957.jpg" alt="本地效果"></p><hr><h3 id="三-部署-Hexo-到-Github"><a href="#三-部署-Hexo-到-Github" class="headerlink" title="三.部署 Hexo 到 Github"></a><strong>三.部署 Hexo 到 Github</strong></h3><p>找到 Hexo 文件夹下的<code>_config.yml</code>文件，修改其中<code>deploy</code>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: “名为 yourGithubAccount.github.io仓库的 ssh 链接”</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>修改完成后在此目录中打开终端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br><span class="line"># 先生成静态文件资源然后部署到配置的 Github 仓库中</span><br></pre></td></tr></table></figure></p><hr><p>Update:2019/1/21 01:11<br>图床尚未就绪，等待更新<br>Update:2019/1/21 23:34<br>图床就绪，更新必要图片</p>]]></content>
      
      
      <categories>
          
          <category> 博客由来 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS Opencv4.0.1+xcode10.1 安装并配置</title>
      <link href="/2019/01/20/macOS-Opencv/"/>
      <url>/2019/01/20/macOS-Opencv/</url>
      
        <content type="html"><![CDATA[<h1 id="macOS-Opencv4-0-1-xcode10-1-安装并配置"><a href="#macOS-Opencv4-0-1-xcode10-1-安装并配置" class="headerlink" title="macOS Opencv4.0.1+xcode10.1 安装并配置"></a>macOS Opencv4.0.1+xcode10.1 安装并配置</h1><h3 id="1-安装-OpenCV"><a href="#1-安装-OpenCV" class="headerlink" title="1.安装 OpenCV"></a>1.安装 OpenCV</h3><p>使用命令:</p><blockquote><p><code>brew install opencv</code><br><code>brew install cmake</code></p></blockquote><p>安装 opencv 与 cmake</p><h3 id="2-配置-Xcode-项目"><a href="#2-配置-Xcode-项目" class="headerlink" title="2.配置 Xcode 项目"></a>2.配置 Xcode 项目</h3><p>新建一个Command Line Tools 项目并选择语言为 C++<br>进入项目配置 -Build Setting-中的：  </p><ol><li><code>Header Search Paths</code>——<code>/usr/local/include/opencv4/</code></li><li><code>Library Search Phts</code>——<code>/usr/local/lib</code>  </li></ol><p>进入<code>General</code>–<code>Linked Frameworks and Libraries</code><br>点击左下角的+号选择 other 并导航到 OpenCV 的主目录<br>Finder使用 <code>command+shift+G</code>前往<code>/usr/local/Cellar/Opencv/4.0.1/lib</code><br>将所有以.dylib 的文件选中并且导入</p><h3 id="3-测试环境"><a href="#3-测试环境" class="headerlink" title="3.测试环境"></a>3.测试环境</h3><p>在 main.cpp中编写如下代码即可测试环境是否可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;opencv2/opencv.hpp&gt;</span><br><span class="line">using namespace cv;</span><br><span class="line">int main(int argc, char** argv) &#123;</span><br><span class="line">    Mat image;</span><br><span class="line">    image = imread(&quot;/Users/test/Pictures/1.JPG&quot;, 1);</span><br><span class="line">    namedWindow(&quot;Display Image&quot;, WINDOW_AUTOSIZE);</span><br><span class="line">    imshow(&quot;Display Image&quot;, image);</span><br><span class="line">    </span><br><span class="line">    Mat gray;</span><br><span class="line">    cvtColor(image, gray, COLOR_RGBA2GRAY);</span><br><span class="line">    namedWindow(&quot;gray&quot;);</span><br><span class="line">    imshow(&quot;gray&quot;, gray);</span><br><span class="line">    </span><br><span class="line">    waitKey(0);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Opencv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Opencv </tag>
            
            <tag> macOS </tag>
            
            <tag> xcode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>大家好，我是佚先生。欢迎来到我的个人瞎扯淡博客。</p><p>我会在这里分享一些在学习或工作中的内容，留下一些痕迹。</p>]]></content>
      
    </entry>
    
    
  
</search>
